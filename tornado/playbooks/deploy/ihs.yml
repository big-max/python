---
#IHS_Standalone.yml: this playook supports Linux only
- name: Configure ansible inventory
  hosts: localhost
  gather_facts: False
  tasks:
    - name: Add hosts to the group named target_hosts
      add_host: >
        name="{{ item.0 }}" groups=target_hosts ansible_host="{{ item.1 }}"
      with_together: 
         - "{{ hostname_list }}"
         - "{{ ip_list }}"
     
- name: Install Environment
  hosts: target_hosts
  strategy: linear
  tags:
    - install
  tasks:
    - name: Update the hostname of target servers
      hostname: name="{{ inventory_hostname }}"
      when: ansible_distribution != 'AIX'
    - name: Update the hostname of target servers for AIX
      mod_chhostname: name="{{ inventory_hostname }}"
      when: ansible_distribution == 'AIX'
    - name: Add hostname to the file /etc/hosts
      lineinfile: dest=/etc/hosts regexp='^{{ item.0 }}.*{{ item.1 }}'  line="{{ item.0 }}        {{ item.1 }}" state=present backup=yes
      with_together: 
         - "{{ ip_list }}"
         - "{{ hostname_list }}"
    - name: Configure system ulimit parameters
      ulimit: domain="{{ ihs_user }}" type='-' item="{{ item.key }}" value="{{ item.value }}"
      with_dict: "{{ os_para_ulimit }}"
      when: ansible_distribution != 'AIX'
    - name: Create temp download directory
      file: path="{{ downloadpath }}/{{ ihs_version }}/{{ item }}" state=directory mode=0755
      with_items:
         - "im"
         - "fp"
    - name: Add the pre-defined user
      user: name="{{ ihs_user }}" append=yes
      when: ihs_user != 'root'
    - name: Change directory mode
      file: path="~{{ ihs_user }}" state=directory mode=0766  
      when: ihs_user != 'root'
    - name: Download IM files    
      get_url:    
        url: "ftp://{{ ftp_user }}:{{ ftp_password }}@{{ ftp_server }}/was/{{ ihs_version }}/{{ ihs_im }}"
        dest: "{{ downloadpath }}/{{ ihs_version }}/im"
        timeout: 100 
    - name: Uncompress IM files 
      shell: unzip -o "{{ downloadpath }}/{{ ihs_version }}/im/{{ ihs_im }}" -d "{{ downloadpath }}/{{ ihs_version }}/im" 
    - name: Download IHS binary files         
      get_url: 
        url: "ftp://{{ ftp_user }}:{{ ftp_password }}@{{ ftp_server }}/was/{{ ihs_version }}/{{ item | basename }}"
        dest: "{{ downloadpath }}/{{ ihs_version }}"
        timeout: 100
      with_fileglob:
        - "{{ softpath }}/{{ ihs_version }}/{{ ihs_binary }}"
    - name: Uncompress IHS binary files
      shell: unzip -o "{{ downloadpath }}/{{ ihs_version }}/{{ ihs_binary }}" -d "{{ downloadpath }}/{{ ihs_version }}"
    - name: Download IHS fixpack files
      get_url: 
        url: "ftp://{{ ftp_user }}:{{ ftp_password }}@{{ ftp_server }}/was/{{ ihs_version }}/{{ item | basename }}"
        dest: "{{ downloadpath }}/{{ ihs_version }}/fp"
        timeout: 100
      with_fileglob:
        - "{{ softpath }}/{{ ihs_version }}/{{ ihs_fp }}"
      when: ihs_fp != '-' 
    - name: Uncompress IHS fixpack files
      shell: unzip -o "{{ downloadpath }}/{{ ihs_version }}/fp/{{ ihs_fp }}" -d "{{ downloadpath }}/{{ ihs_version }}/fp"
      when: ihs_fp != '-'
    - name: Install IM binary with non root user
      shell: su - "{{ ihs_user }}" -c "{{ downloadpath }}/{{ ihs_version }}/im/userinstc -acceptLicense"
      when: ihs_user != 'root'
    - name: Install IM binary with root user
      shell: "{{ downloadpath }}/{{ ihs_version }}/im/installc -acceptLicense"
      when: ihs_user == 'root' 
    - name: Install IHS binary pretask2
      shell: su - "{{ ihs_user }}" -c "{{ ihs_im_path }}/eclipse/tools/imcl listAvailablePackages -repositories {{ downloadpath }}/{{ ihs_version }} | grep 'IHS'"
      register: package
    - name: Install IHS binary with non root user
      shell: >
        su - "{{ ihs_user }}" -c
        "{{ ihs_im_path }}/eclipse/tools/imcl install {{ package.stdout }} 
        -installationDirectory {{ ihs_inst_path }}
        -repositories {{ downloadpath }}/{{ ihs_version }} 
        -properties 'user.ihs.allowNonRootSilentInstall=true,user.ihs.httpPort=8080'
        -acceptLicense"
      when: ihs_user != 'root' 
    - name: Install IHS binary with root user
      shell: >
        su - "{{ ihs_user }}" -c
        "{{ ihs_im_path }}/eclipse/tools/imcl install {{ package.stdout }} 
        -installationDirectory {{ ihs_inst_path }}
        -repositories {{ downloadpath }}/{{ ihs_version }} 
        -properties 'user.ihs.httpPort=80'
        -acceptLicense"
      when: ihs_user == 'root' 
    - name: Install WebSphere Plugin binary pretask
      shell: su - "{{ ihs_user }}" -c "{{ ihs_im_path }}/eclipse/tools/imcl listAvailablePackages -repositories {{ downloadpath }}/{{ ihs_version }} | grep 'PLG'"
      register: package
    - name: Install WebSphere Plugin binary
      shell: >
        su - "{{ ihs_user }}" -c
        "{{ ihs_im_path }}/eclipse/tools/imcl install {{ package.stdout }} 
        -installationDirectory {{ ihs_plg_path }}
        -repositories {{ downloadpath }}/{{ ihs_version }}
        -acceptLicense"
    - name: Install IHS fixpack pretask
      shell: >
        su - "{{ ihs_user }}" -c
        "{{ ihs_im_path }}/eclipse/tools/imcl listAvailablePackages 
        -repositories {{ downloadpath }}/{{ ihs_version }}/fp | grep 'IHS' | grep -v 'ILAN'"
      register: package
      when: ihs_fp != '-'
    - name: Install IHS fixpack if required
      shell: >
        su - "{{ ihs_user }}" -c
        "{{ ihs_im_path }}/eclipse/tools/imcl install {{ package.stdout }} 
        -installationDirectory {{ ihs_inst_path }}
        -repositories {{ downloadpath }}/{{ ihs_version }}/fp
        -acceptLicense"
        when: ihs_fp != '-'
    - name: Install WebSphere Plugin fixpack pretask
      shell: >
        su - "{{ ihs_user }}" -c
        "{{ ihs_im_path }}/eclipse/tools/imcl listAvailablePackages 
        -repositories {{ downloadpath }}/{{ ihs_version }}/fp | grep 'PLG' | grep -v 'ILAN'"
      register: package
      when: ihs_fp != '-'
    - name: Install WebSphere Plugin fixpack if required
      shell: >
        su - "{{ ihs_user }}" -c
        "{{ ihs_im_path }}/eclipse/tools/imcl install {{ package.stdout }} 
        -installationDirectory {{ ihs_plg_path }}
        -repositories {{ downloadpath }}/{{ ihs_version }}/fp
        -acceptLicense"
      when: ihs_fp != '-'

- name: Build Environment
  hosts: target_hosts
  gather_facts: false
  strategy: linear
  tags:
    - build
  tasks:
    - name: configure IHS and WebSphere Plugin
      shell: >
        su - "{{ ihs_user }}" -c
        "{{ ihs_plg_path }}/bin/ConfigureIHSPlugin.sh -plugin.home {{ ihs_plg_path }}  
        -plugin.config.xml {{ ihs_plg_path }}/config/webserver1/plugin-cfg.xml 
        -ihs.conf.file {{ ihs_inst_path }}/conf/httpd.conf
        -operating.system.arch 64
        -operating.system Linux"

- name: Restart Environment
  hosts: target_hosts
  gather_facts: false
  strategy: linear
  tags:
    - restart
  tasks:
    - name: start IBM HTTP Server
      shell: su - "{{ ihs_user }}" -c "{{ ihs_inst_path }}/bin/apachectl start"
